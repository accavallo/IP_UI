/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ip_ui;

/**
 *
 * @author Tony
 */
public class IP_UI extends javax.swing.JFrame {

    /**
     * Creates new form IP_UI
     */
    public IP_UI() {
        initComponents();
        winPingT.setToolTipText("<html>Pings the specified host until stopped.<br />To see statistics and continue - Type Control-Break;<br />This cannot be selected in conjunction with -n.</html>");
        winPingN.setToolTipText("<html>Number of echo requests to send.<br />This cannot be used in conjunction with -t.</html>");
        winNSpinner.setToolTipText("<html>Any number between 1 and 100.<br />Limited to 100 for reasons.</html>");
        winPingLowerR.setToolTipText("<html>Record route for count hops (IPv4-only).</html>");
        winPingA.setToolTipText("<html></html>");
        winPingI.setToolTipText("<html>Time To Live (in milliseconds).</html>");
        winISpinner.setToolTipText("<html>Any number between 1 and 1024.<br />Limited to 1024 for reasons.</html>");
        winPingW.setToolTipText("<html>Timeout in milliseconds to wait for each reply.</html>");
        winWSpinner.setToolTipText("<html>Any number between 1 and 1024.<br />Limited to 1024 for reasons.</html>");
        winNSpinner.setEnabled(false);
        
        // Enter all Linux tooltips here.
    }

    private void runSystemCommand(String command)
    {
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        LinuxPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        winNSpinner = new javax.swing.JSpinner();
        winISpinner = new javax.swing.JSpinner();
        winWSpinner = new javax.swing.JSpinner();
        winPingBtn = new javax.swing.JButton();
        winIpCfgBtn = new javax.swing.JButton();
        winIpLabel = new javax.swing.JLabel();
        windowsTextField = new javax.swing.JTextField();
        winPingT = new javax.swing.JCheckBox();
        winPingN = new javax.swing.JCheckBox();
        winPingLowerR = new javax.swing.JCheckBox();
        winPingA = new javax.swing.JCheckBox();
        winPingI = new javax.swing.JCheckBox();
        winPingW = new javax.swing.JCheckBox();
        winIpCfgAll = new javax.swing.JCheckBox();
        winRSpinner = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        linuxTabLabel = new javax.swing.JLabel();
        linuxPingBtn = new javax.swing.JButton();
        linuxIpConfigBtn = new javax.swing.JButton();
        linuxTextField = new javax.swing.JTextField();
        linuxIpGetifaddr = new javax.swing.JCheckBox();
        linuxIpIfcount = new javax.swing.JCheckBox();
        linuxIpGetoption = new javax.swing.JCheckBox();
        linuxIpGetpacket = new javax.swing.JCheckBox();
        linuxIpGetv6packet = new javax.swing.JCheckBox();
        linuxIpSetverbose = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        linuxIpGetifaddrText = new javax.swing.JTextField();
        linuxIpSet = new javax.swing.JCheckBox();
        linuxIpSetText = new javax.swing.JTextField();
        linuxIpSetArgs = new javax.swing.JComboBox();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        winNSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));
        winNSpinner.setValue(1);

        winISpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 1024, 1));

        winWSpinner.setModel(new javax.swing.SpinnerNumberModel(56, 1, 1024, 1));

        winPingBtn.setText("Ping");
        winPingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winPingBtnActionPerformed(evt);
            }
        });

        winIpCfgBtn.setText("IP Config");

        winIpLabel.setText("IP Address:");

        winPingT.setText("-t");
        winPingT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winPingTActionPerformed(evt);
            }
        });

        winPingN.setText("-n");
        winPingN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winPingNActionPerformed(evt);
            }
        });

        winPingLowerR.setText("-r");

        winPingA.setText("-a");

        winPingI.setText("-i");

        winPingW.setText("-w");
        winPingW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winPingWActionPerformed(evt);
            }
        });

        winIpCfgAll.setText("/all");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(winPingBtn)
                            .addComponent(winPingT, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(winIpCfgBtn)
                            .addComponent(winIpCfgAll)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(winIpLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                        .addComponent(windowsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(winPingI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(winPingN, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                    .addComponent(winPingLowerR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(winNSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(winRSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(winISpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(winPingW)
                                .addGap(18, 18, 18)
                                .addComponent(winWSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(winPingA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(windowsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(winIpLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(winPingBtn)
                    .addComponent(winIpCfgBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(winPingT)
                    .addComponent(winIpCfgAll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(winPingN)
                    .addComponent(winNSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(winPingLowerR)
                    .addComponent(winRSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(winPingA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(winPingI)
                    .addComponent(winISpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(winPingW)
                    .addComponent(winWSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(219, 219, 219))
        );

        winRSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        LinuxPane.addTab("Windows", jPanel1);

        linuxTabLabel.setText("IP Address:");

        linuxPingBtn.setText("Ping");

        linuxIpConfigBtn.setText("IP Config");

        linuxTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linuxTextFieldActionPerformed(evt);
            }
        });

        linuxIpGetifaddr.setText("getifaddr");

        linuxIpIfcount.setText("ifcount");

        linuxIpGetoption.setText("getoption");

        linuxIpGetpacket.setText("getpacket");

        linuxIpGetv6packet.setText("getv6packet");

        linuxIpSetverbose.setText("setverbose");

        jLabel1.setText("Interface name:");

        linuxIpGetifaddrText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linuxIpGetifaddrTextActionPerformed(evt);
            }
        });

        linuxIpSet.setText("set");
        linuxIpSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linuxIpSetActionPerformed(evt);
            }
        });

        linuxIpSetArgs.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NONE", "DCHP", "BOOTP", "MANUAL", "INFORM", "NONE-V6", "MANUAL-V6", "6TO4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(linuxTabLabel))
                            .addComponent(linuxPingBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(linuxTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(linuxIpConfigBtn))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 108, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(linuxIpGetoption)
                                    .addComponent(linuxIpGetpacket)
                                    .addComponent(linuxIpGetv6packet)
                                    .addComponent(linuxIpSetverbose)
                                    .addComponent(linuxIpIfcount)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(linuxIpGetifaddr)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(linuxIpGetifaddrText, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(76, 76, 76))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(linuxIpSet)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(linuxIpSetText, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(linuxIpSetArgs, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(linuxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(linuxTabLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(linuxPingBtn)
                    .addComponent(linuxIpConfigBtn))
                .addGap(3, 3, 3)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(linuxIpGetifaddr)
                    .addComponent(linuxIpGetifaddrText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(linuxIpIfcount)
                .addGap(14, 14, 14)
                .addComponent(linuxIpGetoption)
                .addGap(18, 18, 18)
                .addComponent(linuxIpGetpacket)
                .addGap(18, 18, 18)
                .addComponent(linuxIpGetv6packet)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(linuxIpSetverbose)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(linuxIpSet)
                    .addComponent(linuxIpSetText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(linuxIpSetArgs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(113, Short.MAX_VALUE))
        );

        LinuxPane.addTab("Linux", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LinuxPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LinuxPane)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void winPingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winPingBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_winPingBtnActionPerformed

    private void linuxTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linuxTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_linuxTextFieldActionPerformed

    private void winPingTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winPingTActionPerformed
        if(winPingN.isSelected())
        {
            winPingN.setSelected(false);
            winNSpinner.setEnabled(false);
        }
    }//GEN-LAST:event_winPingTActionPerformed

    private void winPingNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winPingNActionPerformed
        if(winPingT.isSelected())
        {
            winPingT.setSelected(false);
        }
        if(winPingN.isSelected())
        {
            winNSpinner.setEnabled(true);
        }
        else
        {
            winNSpinner.setEnabled(false);
        }
        
    }//GEN-LAST:event_winPingNActionPerformed

    private void winPingWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winPingWActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_winPingWActionPerformed

    private void linuxIpGetifaddrTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linuxIpGetifaddrTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_linuxIpGetifaddrTextActionPerformed

    private void linuxIpSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linuxIpSetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_linuxIpSetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IP_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IP_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IP_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IP_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IP_UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane LinuxPane;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton linuxIpConfigBtn;
    private javax.swing.JCheckBox linuxIpGetifaddr;
    private javax.swing.JTextField linuxIpGetifaddrText;
    private javax.swing.JCheckBox linuxIpGetoption;
    private javax.swing.JCheckBox linuxIpGetpacket;
    private javax.swing.JCheckBox linuxIpGetv6packet;
    private javax.swing.JCheckBox linuxIpIfcount;
    private javax.swing.JCheckBox linuxIpSet;
    private javax.swing.JComboBox linuxIpSetArgs;
    private javax.swing.JTextField linuxIpSetText;
    private javax.swing.JCheckBox linuxIpSetverbose;
    private javax.swing.JButton linuxPingBtn;
    private javax.swing.JLabel linuxTabLabel;
    private javax.swing.JTextField linuxTextField;
    private javax.swing.JSpinner winISpinner;
    private javax.swing.JCheckBox winIpCfgAll;
    private javax.swing.JButton winIpCfgBtn;
    private javax.swing.JLabel winIpLabel;
    private javax.swing.JSpinner winNSpinner;
    private javax.swing.JCheckBox winPingA;
    private javax.swing.JButton winPingBtn;
    private javax.swing.JCheckBox winPingI;
    private javax.swing.JCheckBox winPingLowerR;
    private javax.swing.JCheckBox winPingN;
    private javax.swing.JCheckBox winPingT;
    private javax.swing.JCheckBox winPingW;
    private javax.swing.JSpinner winRSpinner;
    private javax.swing.JSpinner winWSpinner;
    private javax.swing.JTextField windowsTextField;
    // End of variables declaration//GEN-END:variables
}
